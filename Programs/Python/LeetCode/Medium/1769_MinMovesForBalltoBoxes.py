# #Brute Force
# 100X
# both left / right distance of 1 from i and add 1 
# convert left side to integer and than proceed
# right side should be normal

# Use stack to keep track of 1s

from typing import List


class Solution:
    def minOperations(self, boxes: str) -> List[int]:
        ans=[]
        lcount , rcount ,ls , rs = 0,0,0,0
        for i in range(len(boxes)):
            lcount , rcount ,ls , rs = 0,0,0,0
            #Calculating left side
            if(len(boxes[:i])>0):
                lstring = boxes[:i]
                for(ls in range(len(lstring))):
                # while(ls < len(lstring)):

                    if(lstring[::-1][ls]=="1"):
                        lcount +=ls+1

                    ls +=1
            #Calculating right side
            rstring = boxes[i+1:]
            if(len(boxes[i:])>0):
                
                while(rs<len(rstring)):
                    if(rstring[rs]=="1"):
                        rcount +=rs+1
                    rs +=1   
            ans.append(lcount+rcount)
        return ans

sol = Solution()
print(sol.minOperations




        